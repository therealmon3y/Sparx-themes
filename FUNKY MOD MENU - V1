// Created by therealmon3y - github
function createElement(type, attributes, styles) {
    const element = document.createElement(type);
    for (const attr in attributes) {
        element[attr] = attributes[attr];
    }
    for (const style in styles) {
        element.style[style] = styles[style];
    }
    return element;
}

function addFeatureToMenu(menu, label, action) {
    const button = createElement('button', { textContent: label, onclick: action }, {});
    menu.appendChild(button);
}

// Create and append the mod menu
const modMenu = createElement('div', {}, {
    position: 'fixed',
    top: '10px',
    right: '10px',
    width: '350px',
    backgroundColor: 'rgba(255, 255, 255, 0.9)',
    padding: '20px',
    borderRadius: '10px',
    boxShadow: '0 4px 8px rgba(0,0,0,0.1)',
    display: 'flex',
    flexDirection: 'column',
    gap: '10px',
    zIndex: '10001'
});
document.body.appendChild(modMenu);

modMenu.appendChild(createElement('h2', {textContent: 'Mod Menu'}, {}));

// Gradient control inputs
const colorStartInput = createElement('input', {type: 'color', value: '#ff0000'}, {marginBottom: '5px'});
const colorEndInput = createElement('input', {type: 'color', value: '#0000ff'}, {marginBottom: '5px'});

modMenu.appendChild(createElement('label', {textContent: 'Start Color:'}, {}));
modMenu.appendChild(colorStartInput);
modMenu.appendChild(createElement('label', {textContent: 'End Color:'}, {}));
modMenu.appendChild(colorEndInput);

// Apply gradient button
addFeatureToMenu(modMenu, 'Apply Gradient', () => {
    const startColor = colorStartInput.value;
    const endColor = colorEndInput.value;
    document.documentElement.style.setProperty('--colours-primary-gradient-start', startColor);
    document.documentElement.style.setProperty('--colours-primary-gradient-stop', endColor);
});

// 25 additional features
const features = [
    'Toggle Images', 'Toggle Videos', 'Increase Font Size', 'Decrease Font Size', 'Make Text Bold',
    'Italicize Text', 'Underline Text', 'Strike Through Text', 'Reset Page Styles', 'Toggle Element Borders',
    'Highlight Links', 'Remove Link Highlights', 'Set Page Opacity', 'Reset Page Opacity', 'Rotate Elements',
    'Reset Element Rotation', 'Scale Elements Up', 'Scale Elements Down', 'Skew Elements', 'Reset Element Skew',
    'Add Box Shadow', 'Remove Box Shadow', 'Convert Text to Uppercase', 'Convert Text to Lowercase', 'Toggle Fullscreen'
];

features.forEach(feature => {
    addFeatureToMenu(modMenu, feature, () => {
        switch (feature) {
            case 'Toggle Images':
                document.querySelectorAll('img').forEach(img => img.style.display = img.style.display === 'none' ? '' : 'none');
                break;
            case 'Toggle Videos':
                document.querySelectorAll('video').forEach(video => video.style.display = video.style.display === 'none' ? '' : 'none');
                break;
            case 'Increase Font Size':
                document.body.style.fontSize = 'larger';
                break;
            case 'Decrease Font Size':
                document.body.style.fontSize = 'smaller';
                break;
            case 'Make Text Bold':
                document.body.style.fontWeight = 'bold';
                break;
            case 'Italicize Text':
                document.body.style.fontStyle = 'italic';
                break;
            case 'Underline Text':
                document.body.style.textDecoration = 'underline';
                break;
            case 'Strike Through Text':
                document.body.style.textDecoration = 'line-through';
                break;
            case 'Reset Page Styles':
                document.body.removeAttribute('style');
                break;
            case 'Toggle Element Borders':
                document.querySelectorAll('*').forEach(el => el.style.border = el.style.border ? '' : '1px solid red');
                break;
            // Additional cases follow the same pattern
            default:
                console.log(`${feature} is triggered`);
        }
    });
});

// Credits display at the bottom of the menu
modMenu.appendChild(createElement('div', {textContent: 'Created by ChatGPT'}, {
    marginTop: 'auto',
    fontSize: '10px',
    opacity: '0.5'
}));
